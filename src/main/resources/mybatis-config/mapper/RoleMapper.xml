<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.a91coding.payments.dao.IRoleDao">
  <resultMap id="RoleResultMap" type="com.a91coding.payments.model.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
  </resultMap>
  <sql id="Role_Column_List">
    id, name, sn
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="RoleResultMap">
    select 
    <include refid="Role_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="listRole" resultMap="RoleResultMap">
    select
    <include refid="Role_Column_List" />
    from t_role
  </select>


  <select id="selectUserRole" resultType="UserRole" parameterType="map">
    SELECT
    id,
    user_id,
    role_id
    FROM
    t_user_role
    WHERE
    user_id = #{userId} AND role_id = #{roleId}
  </select>

  <insert id="addUserRole" parameterType="map">
    INSERT INTO `t_user_role`(`user_id`,`role_id`)
    VALUES(#{userId},#{roleId})
  </insert>

  <!-- 批量添加用户角色关联表数据 -->
  <insert id="addUserRoles" parameterType="map">
    INSERT INTO `t_user_role`(`user_id`,`role_id`)
    VALUES
    <foreach collection="roleIds" item="role_id" separator=",">
      (#{userId},#{role_id})
    </foreach>
  </insert>

  <delete id="deleteUserRole" parameterType="map">
    DELETE FROM t_user_role
    WHERE
    user_id = #{userId} AND role_id = #{roleId}
  </delete>

  <!-- 删除这个用户所有的角色 -->
  <delete id="deleteUserRoles">
    DELETE FROM t_user_role
    WHERE
    user_id = #{userId}
  </delete>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.a91coding.payments.model.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_role (name, sn)
    values (#{name,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.a91coding.payments.model.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="sn != null">
        sn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.a91coding.payments.model.Role">
    update t_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.a91coding.payments.model.Role">
    update t_role
    set name = #{name,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="batchDeleteRoleResource" parameterType="list">
    DELETE FROM t_role_resource
    WHERE role_id IN
    <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
      #{roleId}
    </foreach>
  </delete>
  <delete id="deleteRoleResource" parameterType="map">
    DELETE FROM t_role_resource
    WHERE
    role_id = #{roleId} AND resource_id = #{resourceId}
  </delete>
  <delete id="deleteRoleAndUser" parameterType="list">
    DELETE FROM t_user_role
    WHERE role_id in
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <!-- 根据角色 id 查询该角色 id 下的所有资源 -->
  <select id="listRoleResource" parameterType="int" resultType="Resource">
    SELECT
    tr.`id`,
    tr.`name`,
    tr.`permission`,
    tr.`url`
    FROM `t_resource` tr
    LEFT JOIN `t_role_resource` trr ON tr.`id` = trr.`resource_id`
    WHERE trr.`role_id` = #{roleId}
  </select>
  <insert id="addRoleResource" parameterType="map">
    INSERT INTO t_role_resource(role_id,resource_id)
    VALUES(#{roleId},#{resourceId})
  </insert>
  <select id="selectResourceRole" parameterType="map" resultType="RoleResource">
    SELECT
    id,
    role_id,
    resource_id
    FROM
    t_role_resource
    WHERE
    role_id = #{roleId} AND resource_id = #{resourceId}
  </select>
</mapper>